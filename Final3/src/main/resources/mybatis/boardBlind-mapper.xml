<?xml version="1.0" encoding="UTF-8"?>


<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="boardBlind">

	<!-- 시퀀스 생성 -->
	<select id="sequence" resultType="int">
		select blind_seq.nextval from
		dual
	</select>


	<!-- Create(등록) -->
	<insert id="save">

		INSERT INTO board_blind(BLIND_NO, BLIND_TITLE,
		BLIND_CONTENT,
		BLIND_WRITER_NICK,
		BLIND_WRITER_COMPANY,
		BLIND_VIEW, BLIND_PASSWORD, BLIND_EMP_NO)
		VALUES
		(#{blindNo}, #{blindTitle}, #{blindContent}, #{blindWriterNick},
		#{blindWriterCompany}, #{blindView},
		#{blindPassword}, #{blindEmpNo})

	</insert>



	<!-- Read 조회 <select id="list" resultType="BoardBlindDto"> select * from 
		board_blind order by blind_no desc </select> -->

	<select id="selectBlindList" resultType="BoardBlindDto">
		SELECT
		bb.blind_no,
		bb.blind_title, bb.blind_content, bb.blind_writer_nick,
		c.company_name
		AS blind_writer_company, bb.blind_wtime,
		bb.blind_etime,
		bb.blind_view,
		bb.blind_password, bb.blind_emp_no
		FROM
		board_blind bb
		JOIN
		emp e ON
		bb.blind_emp_no = e.emp_no
		JOIN
		company c ON e.company_no = c.company_no
		ORDER BY
		bb.blind_no DESC
	</select>





	<!-- <select id="docuList" resultType="BoardBlindDto"> select * from board_blind 
		where blind_emp_no = #{blindEmpNo} </select> -->

	<select id="find" resultType="BoardBlindDto">
		select * from board_blind where
		blind_no = #{blindNo}
	</select>

	<!-- update 전체수정 -->
	<update id="edit">
		update board_blind
		<set>
			<if test="blindTitle != null">blind_title = #{blindTitle},</if>
			<if test="blindContent != null">blind_content = #{blindContent},</if>
			<if test="blindEtime != null">blind_etime = #{blindEtime},</if>
		</set>
		where blind_no = #{blindNo}
	</update>

	<!-- Delete -->
	<delete id="delete">
		delete board_blind where blind_no = #{blindNo}
	</delete>



	<!-- 사용자의 회사 이름 조회 -->
	<select id="selectCompanyNoByToken" resultType="int">
		SELECT
		c.company_name
		FROM company c
		WHERE c.company_no = (
		SELECT e.company_no
		FROM emp e
		WHERE e.emp_no = (
		SELECT emp_no
		FROM emp
		WHERE token = #{token}
		)
		)

	</select>

	<!-- 회사 번호로 회사 이름 조회 -->
	<select id="selectCompanyNameByCompanyNo" resultType="String">
		SELECT
		company_name
		FROM
		company
		WHERE
		company_no = #{companyNo}
	</select>
	
	
	<select id="listByPaging" resultType="BoardBlindDto">
		<include refid="top-n-header"></include>
		SELECT
		bb.blind_no,
		bb.blind_title, bb.blind_content, bb.blind_writer_nick,
		c.company_name
		AS blind_writer_company, bb.blind_wtime,
		bb.blind_etime,
		bb.blind_view,
		bb.blind_password, bb.blind_emp_no
		FROM
		board_blind bb
		JOIN
		emp e ON
		bb.blind_emp_no = e.emp_no
		JOIN
		company c ON e.company_no = c.company_no
		ORDER BY
		bb.blind_no DESC
		<include refid="top-n-footer"></include>
	</select>
	
	
	<!-- 
    	Top N Query 적용
	    - 결국 홈페이지의 목록에는 페이징이라는 개념이 포함된다
	    - 어떻게 구현하느냐에 따라서 네비게이터나 무한스크롤 형태가 됨
	    - 모든 조회에 똑같이 들어가는 구문이므로 어딘가에 보관해두고 불러온다면?
	 -->
	<!-- 상단 -->
	<sql id="top-n-header">
	    <if test="beginRow != null and endRow != null">
	    select * from (
	        select rownum rn, TMP.* from (
	    </if>
	</sql>
	
	<!-- 하단 -->
	<sql id="top-n-footer">
	    <if test="beginRow != null and endRow != null">
	        )TMP
	    ) where rn between #{beginRow} and #{endRow}
	    </if>
	</sql>
	
	<select id="count" resultType="int">
		select count(*) from board_blind
	</select>
	
	
	
</mapper>