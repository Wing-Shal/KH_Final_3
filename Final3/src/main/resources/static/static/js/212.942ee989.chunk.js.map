{"version":3,"file":"static/js/212.942ee989.chunk.js","mappings":"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","sources":["components/intergrated/kakaopay/Purchase.js"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"../../utils/CustomAxios\";\r\nimport { isCheckedState, isPaidState, loginIdState, loginLevelState } from \"../../utils/RecoilData\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport Logo from '../../../assets/PlanetLogo.png';\r\nimport './Purchase.css';\r\n\r\nconst Purchase = ()=> {\r\n    const navigator = useNavigate();\r\n\r\n    const [partnerOrderId, setPartnerOrderId] = useState(\"\");\r\n    const [partnerUserId, setPartnerUserId] = useState(\"\");\r\n    const [tid, setTid] = useState(\"\");\r\n    const [loginId, setLoginId] = useRecoilState(loginIdState);\r\n    const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n    const [isPaid, setIsPaid] = useRecoilState(isPaidState);\r\n    const [isChecked, setIsChecked] = useRecoilState(isCheckedState);\r\n\r\n    const purchase = useCallback(async() => {\r\n        const resp = await axios.get(\"/kakaopay/purchase\");\r\n        //useState에 필요한 데이터 저장\r\n        setPartnerOrderId(resp.data.partnerOrderId);\r\n        setPartnerUserId(resp.data.partnerUserId);\r\n        setTid(resp.data.tid);\r\n\r\n        //새 창을 열고 결제 프로세스 시작\r\n        window.open(resp.data.nextRedirectPcUrl, \"_blank\", \"width=400px, height=800px\");\r\n    });\r\n\r\n    const purchaseApprove = useCallback(async (pgToken)=> {\r\n        try {\r\n            const postData = {\r\n                partnerOrderId,\r\n                partnerUserId,\r\n                tid,\r\n                pgToken\r\n            };\r\n            const resp = await axios.post(\"/kakaopay/purchase/success\", postData);\r\n            setIsPaid(\"ACTIVE\");\r\n            navigator(\"/company/mypage\");\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    });\r\n\r\n    useEffect(()=> {\r\n        const handleMessage = (e)=> {\r\n            if(e.data.type && e.data.type === 'purchaseComplete') {\r\n                purchaseApprove(e.data.pgToken);\r\n            }\r\n        };\r\n        window.addEventListener('message', handleMessage);\r\n        return ()=> {\r\n            window.removeEventListener('message', handleMessage);\r\n        }\r\n    }, [purchaseApprove]);\r\n\r\n    const logout = useCallback(() => {\r\n        setLoginId('');\r\n        setLoginLevel('');\r\n        setIsPaid('');\r\n        setIsChecked('');\r\n        delete axios.defaults.headers.common['Authorization'];\r\n        window.localStorage.removeItem(\"refreshToken\");\r\n    }, [loginId, loginLevel]);\r\n    \r\n\r\n    return (\r\n        <>\r\n            <div className=\"purchase-container\">\r\n                <img src={Logo} alt=\"Logo\" className=\"purchase-logo\" />\r\n                <div className=\"purchase-text\">\r\n                    <h1>인증이 완료되신 사장님 환영합니다!</h1>\r\n                    <p>저희 서비스는 사용자가 편리하게 이용할 수 있도록 다양한 기능을 제공하고 있습니다.</p>\r\n                    <p>더 많은 혜택을 누리기 위해서는 정기 결제가 필요합니다.</p>\r\n                    <p>카카오페이를 통해 간편하게 정기결제를 진행할 수 있습니다.</p>\r\n                    <button type=\"button\" className=\"btn btn-link\" data-bs-toggle=\"modal\" data-bs-target=\"#detailsModal\">자세히 보기</button>\r\n                </div>\r\n                <div className=\"button-container\">\r\n                    <button onClick={purchase} className=\"purchase-button btn btn-secondary\">Planet 이용 시작하기</button>\r\n                </div>\r\n                <div className=\"logout-container\">\r\n                    <a className=\"text-danger\" onClick={() => logout()}>로그아웃</a>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"modal fade\" id=\"detailsModal\" tabIndex=\"-1\" aria-labelledby=\"detailsModalLabel\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"detailsModalLabel\">정기 결제 안내문</h5>\r\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <p>정기결제는 첫 결제일 기준으로 매월 해당일에 결제됩니다.</p>\r\n                            <p>결제일이 해당 월에 존재하지 않는 경우 말일에 결제됩니다.</p>\r\n                            <p>플래닛 이용 비용은 월 990,000원이며, 부가세 포함 금액입니다.</p>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">닫기</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Purchase;"],"names":["Purchase","navigator","useNavigate","partnerOrderId","setPartnerOrderId","useState","partnerUserId","setPartnerUserId","tid","setTid","loginId","setLoginId","useRecoilState","loginIdState","loginLevel","setLoginLevel","loginLevelState","isPaid","setIsPaid","isPaidState","isChecked","setIsChecked","isCheckedState","purchase","useCallback","async","resp","axios","get","data","window","open","nextRedirectPcUrl","purchaseApprove","postData","pgToken","post","error","console","useEffect","handleMessage","e","type","addEventListener","removeEventListener","logout","defaults","headers","common","localStorage","removeItem","_jsxs","_Fragment","children","className","_jsx","src","Logo","alt","onClick","id","tabIndex"],"sourceRoot":""}