{"version":3,"file":"static/js/783.90f122d6.chunk.js","mappings":"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","sources":["components/Jumbotron.js","components/intergrated/Company/EmpList.js"],"sourcesContent":["//페이지의 제목 역할을 하는 컴포넌트\r\n\r\nfunction Jumbotron(props) {//props는 상위 컴포넌트에서 전달되는 값(=파라미터)\r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div style={{backgroundColor: \"#FFC0CB\"}} className=\"p-4 text-light rounded\">\r\n                        <h1>{props.title}</h1>\r\n                        <p>{props.content}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Jumbotron;","import { useEffect, useState, useCallback, useRef } from \"react\";\r\nimport axios from '../../utils/CustomAxios';\r\nimport { FaPenToSquare, FaXmark } from \"react-icons/fa6\";\r\nimport { IoIosSave } from \"react-icons/io\";\r\nimport { GiCancel } from \"react-icons/gi\";\r\nimport { Modal } from 'bootstrap';\r\nimport Jumbotron from \"../../Jumbotron\";\r\nimport { throttle } from \"lodash\";\r\nimport './EmpList.css';\r\n\r\nconst EmpList = () => {\r\n\r\n    const [emps, setEmps] = useState([]);\r\n    const [depts, setDepts] = useState([]);\r\n    const [grades, setGrades] = useState([]);\r\n    const [input, setInput] = useState({});\r\n    const [page, setPage] = useState(1);\r\n    const [size, setSize] = useState(15);\r\n    const [count, setCount] = useState(0);\r\n    const [last, setLast] = useState(false);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n    const loading = useRef(false);\r\n\r\n    const loadData = useCallback(async () => {  \r\n        const searchQuery = searchTerm ? `?search=${searchTerm}` : \"\";\r\n        const empList = await axios.get(`/company/emp/page/${page}/size/${size}${searchQuery}`);\r\n        setCount(empList.data.count);\r\n        setLast(empList.data.last);\r\n        if (page > 1) {\r\n            setEmps(prevEmps => [...prevEmps, ...empList.data.list]);\r\n        } else {\r\n            setEmps(empList.data.list);\r\n        }\r\n    }, [page, size, searchTerm]);\r\n\r\n    useEffect(() => {\r\n        const loadInfo = async () => {\r\n            const gradeList = await axios.get(\"/company/gradeList\");\r\n            setGrades(gradeList.data);\r\n            const deptList = await axios.get(\"/company/deptList\");\r\n            setDepts(deptList.data);\r\n        };\r\n        loadInfo();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        loading.current = true;\r\n        loadData();\r\n        loading.current = false;\r\n    }, [page]);\r\n\r\n    const listener = useCallback(throttle((e) => {\r\n        if (loading.current || last) return; //로딩중이면 리턴\r\n\r\n        const scrollableHeight = document.documentElement.scrollHeight - window.innerHeight;\r\n        const scrollTop = window.scrollY;\r\n        const scrollPercent = (scrollTop / scrollableHeight) * 100;\r\n\r\n        if (last === false && scrollPercent >= 80) {\r\n            setPage(prevPage => prevPage + 1);\r\n        }\r\n    }, 750), [last, loading.current]);\r\n\r\n    useEffect(() => {\r\n        if (loading.current === true) return;\r\n\r\n        window.addEventListener(\"scroll\", listener);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", listener);\r\n        }\r\n    }, [listener]);\r\n\r\n    const changeInput = useCallback((e) => {\r\n        setInput({\r\n            ...input,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }, [input]);\r\n\r\n    const clearInput = useCallback(() => {\r\n        setInput({\r\n            companyNo: \"\",\r\n            empNo: \"\",\r\n            empName: \"\",\r\n            deptName: \"\",\r\n            gradeName: \"\",\r\n            empContact: \"\",\r\n            empEmail: \"\",\r\n            empStatus: \"\",\r\n            empJoin: \"\",\r\n            empExit: \"\"\r\n        });\r\n    }, [input]);\r\n\r\n    const saveInput = useCallback(async () => {\r\n        const resp = await axios.patch(\"/company/emp\", input);\r\n\r\n        loading.current = true;\r\n        loadData();\r\n        loading.current = false;\r\n\r\n        clearInput();\r\n\r\n        closeEditModal();\r\n    }, [input]);\r\n\r\n    const cancelInput = useCallback(() => {\r\n        // const choice = window.confirm(\"작성을 취소하시겠습니까?\");\r\n        // if (choice === false) return;\r\n\r\n        clearInput();\r\n\r\n        closeEditModal();\r\n    }, [input]);\r\n\r\n    const clearSearch = useCallback(async () => {\r\n        setSearchTerm(\"\");\r\n        setPage(1);\r\n        const empList = await axios.get(`/company/emp/page/${page}/size/${size}`);\r\n        setEmps(empList.data.list);\r\n        setCount(empList.data.count);\r\n        setLast(empList.data.last);\r\n    }, [loadData]);\r\n\r\n    const handleSearch = useCallback(() => {\r\n        setPage(1);\r\n        loadData();\r\n    }, [loadData]);\r\n\r\n    const handleSearchChange = useCallback((e) => {\r\n        setSearchTerm(e.target.value);\r\n    }, []);\r\n\r\n    //정보 수정 모달\r\n    const editModal = useRef();\r\n    const openEditModal = useCallback((emp) => {\r\n        const modal = new Modal(editModal.current);\r\n        setInput(emp)\r\n        modal.show();\r\n    }, [editModal]);\r\n    const closeEditModal = useCallback(() => {\r\n        const modal = Modal.getInstance(editModal.current);\r\n        modal.hide();\r\n    }, [editModal]);\r\n\r\n    return (\r\n        <>\r\n            <Jumbotron title=\"사원 목록/관리\" />\r\n\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col-6 offset-3\">\r\n                    <div className=\"input-group\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control search-bar\"\r\n                            placeholder=\"검색...\"\r\n                            value={searchTerm}\r\n                            onChange={handleSearchChange}\r\n                        />\r\n                        <button onClick={clearSearch} className=\"btn btn-secondary\"><FaXmark /></button>\r\n                        <button onClick={handleSearch} className=\"btn btn-primary\">검색</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col\">\r\n                    <table className=\"table\">\r\n                        <thead className=\"text-center\">\r\n                            <tr>\r\n                                <th>사번</th>\r\n                                <th>이름</th>\r\n                                <th>부서</th>\r\n                                <th>직급</th>\r\n                                <th>전화번호</th>\r\n                                <th>이메일</th>\r\n                                <th>관리</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"text-center\">\r\n                            {emps.map(emp => (\r\n                                <tr key={emp.empNo} className='align-items-center'>\r\n                                    <td>{emp.empNo}</td>\r\n                                    <td>{emp.empName}</td>\r\n                                    <td>{emp.deptName}</td>\r\n                                    <td>{emp.gradeName}</td>\r\n                                    <td>{emp.empContact}</td>\r\n                                    <td>{emp.empEmail}</td>\r\n                                    <td>\r\n                                        <FaPenToSquare className='text-warning me-2 pointer'\r\n                                            onClick={() => openEditModal(emp)} />\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Modal */}\r\n            <div ref={editModal} className=\"modal fade\" id=\"staticBackdrop\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabIndex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h1 className=\"modal-title fs-5\" id=\"staticBackdropLabel\">사원 정보 수정</h1>\r\n                            <button type=\"button\" className=\"btn-close\" aria-label=\"Close\" onClick={e => cancelInput()}></button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            {/* 수정 화면 */}\r\n                            <div className='row mt-4'>\r\n                                <div className='col'>\r\n                                    <label>사번</label>\r\n                                    <input type=\"text\" name=\"empNo\"\r\n                                        value={input.empNo}\r\n                                        readOnly\r\n                                        className='form-control' />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='row mt-4'>\r\n                                <div className='col'>\r\n                                    <label>이름</label>\r\n                                    <input type=\"text\" name=\"empName\"\r\n                                        value={input.empName}\r\n                                        readOnly\r\n                                        className='form-control' />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='row mt-4'>\r\n                                <div className='col'>\r\n                                    <label>부서</label>\r\n                                    <select\r\n                                        name=\"deptName\"\r\n                                        value={input.deptName}\r\n                                        onChange={e => changeInput(e)}\r\n                                        className='form-control'>\r\n                                        <option value=\"\">부서 선택</option>\r\n                                        {depts.map(dept => (\r\n                                            <option value={dept}>\r\n                                                {dept}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='row mt-4'>\r\n                                <div className='col'>\r\n                                    <label>직급</label>\r\n                                    <select\r\n                                        name=\"gradeName\"\r\n                                        value={input.gradeName}\r\n                                        onChange={e => changeInput(e)}\r\n                                        className='form-control'>\r\n                                        <option value=\"\">직급 선택</option>\r\n                                        {grades.map(grade => (\r\n                                            <option value={grade}>\r\n                                                {grade}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='row mt-4'>\r\n                                <div className='col'>\r\n                                    <label>전화번호</label>\r\n                                    <input type=\"text\" name=\"empContact\"\r\n                                        value={input.empContact}\r\n                                        readOnly\r\n                                        className='form-control' />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='row mt-4'>\r\n                                <div className='col'>\r\n                                    <label>이메일</label>\r\n                                    <input type=\"text\" name=\"empEmail\"\r\n                                        value={input.empEmail}\r\n                                        readOnly\r\n                                        className='form-control' />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='row mt-4'>\r\n                                <div className='col'>\r\n                                    <label>입사일</label>\r\n                                    <input type=\"text\" name=\"empJoin\"\r\n                                        value={input.empJoin}\r\n                                        readOnly\r\n                                        className='form-control' />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='row mt-4'>\r\n                                <div className='col'>\r\n                                    <label>퇴사일</label>\r\n                                    <input type=\"text\" name=\"empExit\"\r\n                                        value={input.empExit}\r\n                                        readOnly\r\n                                        className='form-control' />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button className='btn btn-danger'\r\n                                onClick={e => cancelInput()}>\r\n                                <GiCancel />\r\n                                &nbsp;\r\n                                취소\r\n                            </button>\r\n                            <button className='btn btn-success me-2'\r\n                                onClick={e => saveInput()}>\r\n                                <IoIosSave />\r\n                                &nbsp;\r\n                                저장\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EmpList;"],"names":["props","_jsx","_Fragment","children","className","_jsxs","style","backgroundColor","title","content","EmpList","emps","setEmps","useState","depts","setDepts","grades","setGrades","input","setInput","page","setPage","size","setSize","count","setCount","last","setLast","searchTerm","setSearchTerm","loading","useRef","loadData","useCallback","async","searchQuery","concat","empList","axios","get","data","prevEmps","list","useEffect","gradeList","deptList","loadInfo","current","listener","throttle","e","scrollableHeight","document","documentElement","scrollHeight","window","innerHeight","scrollTop","scrollY","prevPage","addEventListener","removeEventListener","changeInput","target","name","value","clearInput","companyNo","empNo","empName","deptName","gradeName","empContact","empEmail","empStatus","empJoin","empExit","saveInput","patch","closeEditModal","cancelInput","clearSearch","handleSearch","handleSearchChange","editModal","openEditModal","emp","modal","Modal","show","getInstance","hide","Jumbotron","type","placeholder","onChange","onClick","FaXmark","map","FaPenToSquare","ref","id","tabIndex","readOnly","dept","grade","GiCancel","IoIosSave"],"sourceRoot":""}