{"version":3,"file":"static/js/366.01ae4151.chunk.js","mappings":"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","sources":["components/Jumbotron.js","components/intergrated/Project/Project.js"],"sourcesContent":["//페이지의 제목 역할을 하는 컴포넌트\r\n\r\nfunction Jumbotron(props) {//props는 상위 컴포넌트에서 전달되는 값(=파라미터)\r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div style={{backgroundColor: \"#FFC0CB\"}} className=\"p-4 text-light rounded\">\r\n                        <h1>{props.title}</h1>\r\n                        <p>{props.content}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Jumbotron;","\r\nimport { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { loginIdState, loginLevelState } from '../../../components/utils/RecoilData';\r\nimport { useRecoilState } from 'recoil';\r\nimport Jumbotron from \"../../Jumbotron\";\r\nimport { FaSquareXmark } from \"react-icons/fa6\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport { FaCheck } from \"react-icons/fa\";\r\nimport { IoMdAdd } from \"react-icons/io\";\r\nimport { TbPencilCancel } from \"react-icons/tb\";\r\nimport axios from \"../../utils/CustomAxios\";\r\nimport { Modal } from \"bootstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport { FcOpenedFolder } from \"react-icons/fc\";\r\nimport { RiUserSearchFill } from \"react-icons/ri\";\r\n\r\nconst Project = () => {\r\n\r\n    //state\r\n    // const projectName = 'Your Project Name'; // 예시로 고정값 사용, 실제로는 상태나 변수로 가져와야 함\r\n    const [loginId, setLoginId] = useRecoilState(loginIdState);\r\n    const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n    const [projects, setProjects] = useState([]);\r\n    const [emps, setEmps] = useState([]);\r\n    const [depts, setDepts] = useState([]);\r\n    const [grades, setGrades] = useState([]);\r\n    // const [empInfo, setEmpInfo] = useState([]);\r\n    const [input, setInput] = useState({\r\n        projectName: \"\",\r\n        projectStartTime: \"\",\r\n        projectLimitTime: \"\",\r\n        empNo: \"\",\r\n        empName: \"\",\r\n        deptName: \"\",\r\n        gradeName: \"\"\r\n    });\r\n    const [backup, setBackup] = useState(null);//수정 시 복원을 위한 백업\r\n\r\n    //effect\r\n    useEffect(() => {\r\n\r\n        loadData();\r\n        // loadEmpData();\r\n    }, []);\r\n\r\n    // const loadEmps = useCallback(async() =>{\r\n    //     const empNo = loginId;\r\n    //     const resp = await axios.get(\"/company/\"+empNo);\r\n    //     setEmps(resp.data);\r\n    //     console.log(resp.data)\r\n\r\n    // });\r\n\r\n\r\n\r\n    //현재 쓰고있는 코드\r\n    const loadData = useCallback(async () => {\r\n        const empNo = loginId;\r\n        // const empList = await axios.get(\"/project/companyEmployees/\" + empNo)\r\n        // setEmps(empList.data);\r\n       \r\n        const resp = await axios.get(\"/project/\" + empNo);\r\n        setProjects(resp.data);\r\n\r\n\r\n    }, []);\r\n\r\n\r\n    //삭제\r\n    const deleteProject = useCallback(async (target) => {\r\n        const choice = window.confirm(\"정말 삭제하시겠습니까?\");\r\n        if (choice === false) return;\r\n        //target에 있는 내용을 서버에 지워달라고 요청하고 목록을 다시 불러온다\r\n        const resp = await axios.delete(\"/project/\" + target.projectNo);\r\n        loadData();\r\n    }, [projects]);\r\n    //신규 등록 화면 입력값 변경\r\n    const changeInput = useCallback((e) => {\r\n        setInput({\r\n            ...input,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }, [input]);\r\n    //등록\r\n    const saveInput = useCallback(async () => {\r\n        const resp = await axios.post(\"/project/\", input);\r\n        loadData();\r\n        clearInput();\r\n        closeModal();\r\n    }, [input]);\r\n\r\n\r\n    //등록 취소\r\n    const cancelInput = useCallback(() => {\r\n        const choice = window.confirm(\"작성을 취소하시겠습니까?\");\r\n        if (choice === false) return;\r\n        clearInput();\r\n        closeModal();\r\n    }, [input]);\r\n    //입력값 초기화\r\n    const clearInput = useCallback(() => {\r\n        setInput({\r\n            projectName: \"\",\r\n            projectStartTime: \"\",\r\n            projectLimitTime: \"\",\r\n            empNo: \"\",\r\n            empName: \"\"\r\n\r\n        });\r\n    }, [input]);\r\n    //수정\r\n    const editProject = useCallback((target) => {\r\n        //복제\r\n        const copy = [...projects];\r\n        //(+추가) 이미 수정중인 항목이 있을 수 있으므로 해당 항목은 취소 처리가 필요\r\n        const recover = copy.map(project => {\r\n            if (project.edit === true) {//수정중인 항목을 발견하면\r\n                return { ...backup, edit: false };//백업으로 갱신 + 수정모드 취소\r\n            }\r\n            else {\r\n                return { ...project };//그대로\r\n            }\r\n        });\r\n        setBackup({ ...target }); //백업\r\n        const copy2 = recover.map(project => {\r\n            if (target.projectNo === project.projectNo) {//원하는 정보일 경우\r\n                return {\r\n                    ...project,//나머지 정보는 유지하되\r\n                    edit: true,//edit 관련된 처리를 추가하여 반환\r\n                };\r\n            }\r\n            else {//원하는 정보가 아닐 경우\r\n                return { ...project };//데이터를 그대로 복제하여 반환\r\n            }\r\n        });\r\n\r\n        setProjects(copy2);\r\n    }, [projects]);\r\n    const cancelEditProject = useCallback((target) => {\r\n        //1. 복제한다\r\n        const copy = [...projects];\r\n        const copy2 = copy.map(project => {\r\n\r\n            if (target.projectNo === project.projectNo) {//원하는 정보일 경우\r\n                return {\r\n                    ...backup,//백업 정보를 전달\r\n                    edit: false,//edit 관련된 처리를 추가하여 반환\r\n                };\r\n            }\r\n            else {//원하는 정보가 아닐 경우\r\n                return { ...project };//데이터를 그대로 복제하여 반환\r\n            }\r\n        });\r\n        //덮어씌우기\r\n        setProjects(copy2);\r\n    }, [projects]);\r\n    const changeProject = useCallback((e, target) => {\r\n        const copy = [...projects];\r\n        const copy2 = copy.map(project => {\r\n            if (target.projectNo === project.projectNo) {//\r\n                return {\r\n                    ...project,//나머지 정보는 유지\r\n                    [e.target.name]: e.target.value//단, 입력항목만 교체\r\n                };\r\n            }\r\n            else {//다른 학생이라면\r\n                return { ...project };//현상유지\r\n            }\r\n        });\r\n        setProjects(copy2);\r\n    }, [projects]);\r\n    //수정된 결과를 저장 + 목록갱신 + 수정모드 해제\r\n    const saveEditProject = useCallback(async (target) => {\r\n        //서버에 target을 전달하여 수정 처리\r\n        const resp = await axios.patch(\"/project/\", target);\r\n        //목록 갱신\r\n        loadData();\r\n    }, [projects]);\r\n\r\n    //ref + modal\r\n    const bsModal = useRef();\r\n    const openModal = useCallback(() => {\r\n        const modal = new Modal(bsModal.current);\r\n        setInput({\r\n            ...input,\r\n            empNo: loginId\r\n        });\r\n        modal.show();\r\n    }, [bsModal]);\r\n    const closeModal = useCallback(() => {\r\n        const modal = Modal.getInstance(bsModal.current);\r\n        modal.hide();\r\n    }, [bsModal]);\r\n    //view\r\n\r\n    return (\r\n        <>\r\n            <Jumbotron title=\"내 프로젝트\" />\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col text-end\">\r\n                    <button \r\n                        className=\"btn btn-primary\" \r\n                        onClick={openModal} \r\n                        style={{ \r\n                            backgroundColor: 'pink', \r\n                            border: 'none', \r\n                            transition: 'background-color 0.3s, color 0.3s', // Smooth transition\r\n                            cursor: 'pointer', // Show pointer cursor on hover\r\n                        }}\r\n                        onMouseEnter={(e) => { e.target.style.backgroundColor = 'hotpink'; e.target.style.color = 'white'; }}\r\n                        onMouseLeave={(e) => { e.target.style.backgroundColor = 'pink'; e.target.style.color = 'inherit'; }}\r\n                    >\r\n                        <IoMdAdd /> 새 프로젝트\r\n                    </button>\r\n                </div>\r\n            </div>\r\n    \r\n            {projects.map(project => (\r\n                <div key={project.projectNo} className=\"row mt-4\">\r\n                    <div className=\"col\">\r\n                        <div className=\"card mb-3\" style={{ border: '2px solid pink' }}>\r\n                            <div className=\"card-body\" style={{ borderBottom: '2px solid pink' }}>\r\n                                <div className=\"card-title d-flex align-items-center\">\r\n                                    <FcOpenedFolder style={{ color: '#007bff', fontSize: '1.5em', marginRight: '0.5em' }} />\r\n                                    {project.edit ? (\r\n                                        <input type=\"text\" value={project.projectName} name=\"projectName\" onChange={(e) => changeProject(e, project)} className=\"form-control\" />\r\n                                    ) : (\r\n                                        <Link to={`/document/project/${project.projectNo}`} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n                                            <span\r\n                                                style={{\r\n                                                    backgroundColor: 'pink',\r\n                                                    padding: '5px 10px',\r\n                                                    borderRadius: '5px',\r\n                                                    transition: 'background-color 0.3s, color 0.3s',\r\n                                                    cursor: 'pointer',\r\n                                                }}\r\n                                                onMouseEnter={(e) => { e.target.style.backgroundColor = 'hotpink'; e.target.style.color = 'white'; }}\r\n                                                onMouseLeave={(e) => { e.target.style.backgroundColor = 'pink'; e.target.style.color = 'inherit'; }}\r\n                                            >\r\n                                                {project.projectName}\r\n                                            </span>\r\n                                        </Link>\r\n                                    )}\r\n                                </div>\r\n                               \r\n                                <div className=\"card-text\" style={{ marginLeft: '5px', borderBottom: '2px solid pink', marginBottom: '5px', padding: '10px 0' }}>프로젝트 번호: {project.projectNo}</div>\r\n\r\n            \r\n                                <div className=\"card-text\" style={{ marginLeft: '5px', borderBottom: '2px solid pink', marginBottom: '5px', padding: '10px 0' }} >작성자: {project.projectWriter}</div>\r\n                                <div className=\"card-date-picker\" style={{ marginLeft: '5px', borderBottom: '2px solid pink', marginBottom: '5px', padding: '10px 0' }}>시작일: {project.edit ? <input type=\"date\" name=\"projectStartTime\" value={project.projectStartTime} onChange={(e) => changeProject(e, project)} /> : project.projectStartTime}</div>\r\n                                <div className=\"card-date-picker\" style={{ marginLeft: '5px', borderBottom: '2px solid pink', marginBottom: '5px', padding: '10px 0' }}>마감일: {project.edit ? <input type=\"date\" name=\"projectLimitTime\" value={project.projectLimitTime} onChange={(e) => changeProject(e, project)} /> : project.projectLimitTime}</div>\r\n                                <div className=\"text-end\">\r\n                                    {project.edit ? (\r\n                                        <>\r\n                                            <FaCheck className=\"text-success me-2\" onClick={() => saveEditProject(project)} />\r\n                                            <TbPencilCancel className=\"text-danger\" onClick={() => cancelEditProject(project)} />\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                          \r\n                                        </>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n    \r\n    \r\n\r\n    \r\n\r\n\r\n            {/* Modal */}\r\n            <div ref={bsModal} className=\"modal fade\" id=\"staticBackdrop\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabIndex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h1 className=\"modal-title fs-5\" id=\"staticBackdropLabel\">새 프로젝트</h1>\r\n                            <button type=\"button\" className=\"btn-close\" aria-label=\"Close\" onClick={cancelInput}></button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div>\r\n                                <p>사원 번호: {input.empNo}</p>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col\">\r\n                                    <label>프로젝트 명</label>\r\n                                    <input type=\"text\" name=\"projectName\" value={input.projectName} onChange={changeInput} className=\"form-control\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col\">\r\n                                    <label>시작일</label>\r\n                                    <input type=\"date\" name=\"projectStartTime\" value={input.projectStartTime} onChange={changeInput} className=\"form-control\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col\">\r\n                                    <label>마감일</label>\r\n                                    <input type=\"date\" name=\"projectLimitTime\" value={input.projectLimitTime} onChange={changeInput} className=\"form-control\" />\r\n                                </div>\r\n                            </div>\r\n                                        \r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button className=\"btn btn-success me-2\" onClick={saveInput}>등록</button>\r\n                            <button className=\"btn btn-danger\" onClick={cancelInput}>취소</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nexport default Project;"],"names":["props","_jsx","_Fragment","children","className","_jsxs","style","backgroundColor","title","content","Project","loginId","setLoginId","useRecoilState","loginIdState","loginLevel","setLoginLevel","loginLevelState","projects","setProjects","useState","emps","setEmps","depts","setDepts","grades","setGrades","input","setInput","projectName","projectStartTime","projectLimitTime","empNo","empName","deptName","gradeName","backup","setBackup","useEffect","loadData","useCallback","async","resp","axios","get","data","changeInput","window","confirm","delete","target","projectNo","e","name","value","saveInput","post","clearInput","closeModal","cancelInput","cancelEditProject","recover","map","project","edit","copy2","changeProject","saveEditProject","patch","bsModal","useRef","openModal","modal","Modal","current","show","getInstance","hide","Jumbotron","onClick","border","transition","cursor","onMouseEnter","color","onMouseLeave","IoMdAdd","borderBottom","FcOpenedFolder","fontSize","marginRight","type","onChange","Link","to","concat","textDecoration","padding","borderRadius","marginLeft","marginBottom","projectWriter","FaCheck","TbPencilCancel","ref","id","tabIndex"],"sourceRoot":""}