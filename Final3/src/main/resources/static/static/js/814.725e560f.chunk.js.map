{"version":3,"file":"static/js/814.725e560f.chunk.js","mappings":"sMAOA,MAwFA,EAxFuBA,KAInB,MAAMC,GAAWC,EAAAA,EAAAA,OAEVC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,CAC/BC,YAAa,GACbC,cAAe,KAIbC,GAAcC,EAAAA,EAAAA,cAAaC,IAC7B,MAAMC,EAAOD,EAAEE,OAAOD,KAChBE,EAAQH,EAAEE,OAAOC,MAEvBT,EAAS,IACFD,EACH,CAACQ,GAAOE,GACV,GACF,CAACV,IAICW,GAAYL,EAAAA,EAAAA,cAAYM,UAE1B,IAAe,IADAC,OAAOC,QAAQ,wEACR,OACtB,MAAMC,QAAaC,EAAAA,EAAMC,KAAK,gBAAiBjB,GAC/CkB,IAEApB,EAAS,mBAADqB,OAAoBJ,EAAKK,KAAKC,UAAW,GAClD,CAACrB,IAGEsB,GAAchB,EAAAA,EAAAA,cAAY,MAEb,IADAO,OAAOC,QAAQ,2EAE9BI,IACApB,EAAS,mBAAkB,GAC5B,CAACE,IAGEkB,GAAaZ,EAAAA,EAAAA,cAAY,KAC3BL,EAAS,CACLE,YAAa,GACbC,cAAe,IACjB,GACH,CAACJ,IAEJ,GAAIA,EAAMG,YAAYoB,OAAS,GAC3BV,OAAOW,MAAM,sGADjB,CAKE,KAAIxB,EAAMI,cAAcmB,OAAS,MAKnC,OACIE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,8BACJC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUF,UACrBF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,MAAKF,SAAA,EAChBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,kBACPC,EAAAA,EAAAA,KAAA,SAAOE,KAAK,OAAOtB,KAAK,cAAcE,MAAOV,EAAMG,YAAa4B,SAAU1B,EAAawB,UAAU,uBAIzGD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUF,UACrBF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,MAAKF,SAAA,EAChBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,kBACPC,EAAAA,EAAAA,KAAA,YAAUpB,KAAK,gBAAgBE,MAAOV,EAAMI,cACxC2B,SAAU1B,EACVwB,UAAU,uCAItBD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUF,UACrBF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,eAAcF,SAAA,EACzBF,EAAAA,EAAAA,MAAA,UAAQI,UAAU,uBAAuBG,QAASzB,GAAKI,IAAYgB,SAAA,EAACC,EAAAA,EAAAA,KAACK,EAAAA,IAAa,IAAG,oBACrFR,EAAAA,EAAAA,MAAA,UAAQI,UAAU,iBAAiBG,QAASzB,GAAKe,IAAcK,SAAA,EAACC,EAAAA,EAAAA,KAACM,EAAAA,IAAQ,IAAG,2BA1BxFrB,OAAOW,MAAM,iGAHf,CAgCK,C","sources":["components/intergrated/Company/BoardNoticeAdd.js"],"sourcesContent":["import { useCallback, useState } from \"react\";\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from \"../../utils/CustomAxios\";\r\nimport { MdCancel } from \"react-icons/md\";\r\nimport { IoSaveOutline } from \"react-icons/io5\";\r\nimport './BoardNoticeEditAdd.css'\r\n\r\nconst BoardNoticeAdd = () => {\r\n\r\n    // const { noticeNo } = useParams();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [input, setInput] = useState({\r\n        noticeTitle: \"\",\r\n        noticeContent: \"\",\r\n    });\r\n\r\n    //callback\r\n    const changeInput = useCallback((e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setInput({\r\n            ...input,\r\n            [name]: value\r\n        });\r\n    }), [input])\r\n\r\n\r\n    //신규등록\r\n    const saveInput = useCallback(async () => {\r\n        const choice = window.confirm(\"공지를 등록하시겠습니까?\");\r\n        if (choice === false) return;\r\n        const resp = await axios.post(\"/boardNotice/\", input);\r\n        clearInput();\r\n\r\n        navigate(`/company/notice/${resp.data.noticeNo}`);\r\n    }, [input]);\r\n\r\n    //등록 취소\r\n    const cancelInput = useCallback(() => {\r\n        const choice = window.confirm(\"작성된 내용이 삭제됩니다.\");\r\n        if (choice === false) return;\r\n        clearInput();\r\n        navigate(\"/company/notice\");\r\n    }, [input]);\r\n\r\n    //입력값 초기화\r\n    const clearInput = useCallback(() => {\r\n        setInput({\r\n            noticeTitle: \"\",\r\n            noticeContent: \"\",\r\n        })\r\n    }, [input]);\r\n\r\n    if (input.noticeTitle.length > 30) {\r\n        window.alert(\"제목의 제한 글자수를 초과했습니다.\");\r\n        return;\r\n      }\r\n  \r\n      if (input.noticeContent.length > 1333) {\r\n        window.alert(\"내용의 제한 글자수를 초과했습니다.\");\r\n        return;\r\n      }\r\n\r\n    return (\r\n        <>\r\n            <h1>공지등록</h1>\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col\">\r\n                    <label>제목</label>\r\n                    <input type=\"text\" name=\"noticeTitle\" value={input.noticeTitle} onChange={changeInput} className=\"form-control\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col\">\r\n                    <label>내용</label>\r\n                    <textarea name=\"noticeContent\" value={input.noticeContent}\r\n                        onChange={changeInput}\r\n                        className=\"form-control custom-textarea\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col text-end\">\r\n                    <button className=\"btn btn-success me-2\" onClick={e => saveInput()}><IoSaveOutline /> 등록</button>\r\n                    <button className=\"btn btn-danger\" onClick={e => cancelInput()}><MdCancel /> 취소</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BoardNoticeAdd;"],"names":["BoardNoticeAdd","navigate","useNavigate","input","setInput","useState","noticeTitle","noticeContent","changeInput","useCallback","e","name","target","value","saveInput","async","window","confirm","resp","axios","post","clearInput","concat","data","noticeNo","cancelInput","length","alert","_jsxs","_Fragment","children","_jsx","className","type","onChange","onClick","IoSaveOutline","MdCancel"],"sourceRoot":""}