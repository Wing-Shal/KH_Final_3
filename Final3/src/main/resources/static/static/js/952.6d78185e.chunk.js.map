{"version":3,"file":"static/js/952.6d78185e.chunk.js","mappings":"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","sources":["components/Jumbotron.js","components/intergrated/BoardNotice/BoardNotice.js"],"sourcesContent":["//페이지의 제목 역할을 하는 컴포넌트\r\n\r\nfunction Jumbotron(props) {//props는 상위 컴포넌트에서 전달되는 값(=파라미터)\r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div style={{backgroundColor: \"#FFC0CB\"}} className=\"p-4 text-light rounded\">\r\n                        <h1>{props.title}</h1>\r\n                        <p>{props.content}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Jumbotron;","import axios from \"../../utils/CustomAxios\";\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './BoardNotice.css';\r\nimport Jumbotron from \"../../Jumbotron\";\r\n\r\nconst BoardNotice = () => {\r\n    const [notices, setNotices] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [size, setSize] = useState(10);\r\n    const [column, setColumn] = useState('notice_title');\r\n    const [keyword, setKeyword] = useState('');\r\n    const [totalPages, setTotalPages] = useState(1);\r\n\r\n    useEffect(() => {\r\n        loadNoticeData();\r\n    }, [page, size]);\r\n\r\n    const loadNoticeData = useCallback(async () => {\r\n        try {\r\n            const resp = await axios.get(`/boardNotice/page/${page}/size/${size}`, {\r\n                params: { column, keyword }\r\n            });\r\n            setNotices(resp.data.list);\r\n            setTotalPages(resp.data.totalPage);\r\n        }\r\n        catch (error) {\r\n            if (error.response && error.response.status === 404) {\r\n                console.log(\"데이터 없음.\");\r\n                setNotices([]);\r\n            }\r\n        }\r\n    }, [page, size, column, keyword]);\r\n\r\n    const handleSearch = (e) => {\r\n        e.preventDefault();\r\n        setPage(1);\r\n        loadNoticeData();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Jumbotron title=\"공지사항\" />\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col\">\r\n                    <div className=\"notice-list\">\r\n                        {notices.map(notice => (\r\n                            <div className=\"notice-item\" key={notice.noticeNo}>\r\n                                <div className=\"notice-content\">\r\n                                    <h5>\r\n                                        <Link to={`/board/notice/${notice.noticeNo}`}>\r\n                                        {notice.noticeTitle}<span style={{fontSize: \"12px\"}}>{notice.noticeEtime && \" (수정됨)\"}</span>\r\n                                        </Link>\r\n                                    </h5>\r\n                                    <p>{notice.noticeEtime ? `수정시간: ${notice.noticeEtimeWithMinute}` : `작성시간: ${notice.noticeWtimeWithMinute}`}</p>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"row mt-4\">\r\n                        <div className=\"col-8 offset-2\">\r\n                            <form onSubmit={handleSearch}>\r\n                                <div className=\"input-group mb-3\">\r\n                                    <select\r\n                                        value={column}\r\n                                        onChange={(e) => setColumn(e.target.value)}\r\n                                        className=\"form-select\"\r\n                                    >\r\n                                        <option value=\"notice_title\">제목</option>\r\n                                        <option value=\"notice_content\">내용</option>\r\n                                    </select>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control w-75\"\r\n                                        placeholder=\"검색어를 입력하세요\"\r\n                                        value={keyword}\r\n                                        onChange={(e) => setKeyword(e.target.value)}\r\n                                    />\r\n                                    <button className=\"btn btn-outline-secondary\" type=\"submit\">검색</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mt-4 justify-content-center\">\r\n                        <div className=\"col-auto\">\r\n                            <nav aria-label=\"Page navigation\">\r\n                                <ul className=\"pagination\">\r\n                                    <li className={`page-item ${page === 1 ? 'disabled' : ''}`}>\r\n                                        <button className=\"page-link\" onClick={() => setPage(page - 1)}>이전</button>\r\n                                    </li>\r\n                                    {[...Array(totalPages).keys()].map(num => (\r\n                                        <li key={num + 1} className={`page-item ${page === num + 1 ? 'active' : ''}`}>\r\n                                            <button className=\"page-link\" onClick={() => setPage(num + 1)}>{num + 1}</button>\r\n                                        </li>\r\n                                    ))}\r\n                                    <li className={`page-item ${page === totalPages ? 'disabled' : ''}`}>\r\n                                        <button className=\"page-link\" onClick={() => setPage(page + 1)}>다음</button>\r\n                                    </li>\r\n                                </ul>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BoardNotice;\r\n"],"names":["props","_jsx","_Fragment","children","className","_jsxs","style","backgroundColor","title","content","BoardNotice","notices","setNotices","useState","page","setPage","size","setSize","column","setColumn","keyword","setKeyword","totalPages","setTotalPages","useEffect","loadNoticeData","useCallback","async","resp","axios","get","concat","params","data","list","totalPage","error","response","status","console","log","Jumbotron","map","notice","Link","to","noticeNo","noticeTitle","fontSize","noticeEtime","noticeEtimeWithMinute","noticeWtimeWithMinute","onSubmit","e","preventDefault","value","onChange","target","type","placeholder","onClick","Array","keys","num"],"sourceRoot":""}