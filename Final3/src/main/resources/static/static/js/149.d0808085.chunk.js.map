{"version":3,"file":"static/js/149.d0808085.chunk.js","mappings":"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","sources":["components/Jumbotron.js","components/intergrated/Company/Dept.js","components/intergrated/Company/Grade.js","components/intergrated/Company/Management.js"],"sourcesContent":["//페이지의 제목 역할을 하는 컴포넌트\r\n\r\nfunction Jumbotron(props) {//props는 상위 컴포넌트에서 전달되는 값(=파라미터)\r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div style={{backgroundColor: \"#FFC0CB\"}} className=\"p-4 text-light rounded\">\r\n                        <h1>{props.title}</h1>\r\n                        <p>{props.content}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Jumbotron;","import Jumbotron from \"../../Jumbotron\";\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport axios from '../../utils/CustomAxios';\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginIdState } from \"../../utils/RecoilData\";\r\nimport { FaMinus, FaPlus } from \"react-icons/fa\";\r\n\r\nconst Dept = () => {\r\n\r\n    const [depts, setDepts] = useState([]);\r\n    const [loginId, setLoginId] = useRecoilState(loginIdState);\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, []);\r\n\r\n    const loadData = useCallback(async () => {\r\n        const resp = await axios.get(\"/company/dept\");\r\n        setDepts(resp.data);\r\n    }, [depts]);\r\n\r\n    const addDept = () => {\r\n        setDepts([...depts, { deptNo: 0, companyNo:parseInt(loginId) ,deptName: '' }]);\r\n    };\r\n\r\n    const saveDepts = async () => {\r\n        const resp = await axios.post(\"/company/dept\", depts);\r\n        loadData();\r\n    };\r\n\r\n    const changeInput = (index, e) => {\r\n        const newDepts = [...depts];\r\n        newDepts[index][e.target.name] = e.target.value;\r\n        setDepts(newDepts);\r\n    };\r\n\r\n    const deleteDept = async (deptNo, index) => {\r\n        const response = await axios.get(\"/company/dept/hasEmp/\"+deptNo);\r\n            const choice = window.confirm(\"정말 삭제하시겠습니까?\")\r\n            if(!choice) return;\r\n            if (response.data.length > 0) {\r\n                alert('사원이 존재하는 부서는 삭제할 수 없습니다.');\r\n            } else {\r\n                await axios.delete(\"/company/dept/\"+deptNo);\r\n                const updatedDepts = [...depts];\r\n                updatedDepts.splice(index, 1);\r\n                setDepts(updatedDepts);\r\n                alert('부서가 삭제되었습니다.');\r\n            }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <br /><br />\r\n            <div className='row mt-5'>\r\n                <div className='col'>\r\n                    <table className='table'>\r\n                        <thead className='text-center'>\r\n                            <tr className='align-items-center'>\r\n                                <th>부서목록</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className='text-center'>\r\n                            {depts.map((dept, index) => (\r\n                                <tr key={index} className='align-items-center'>\r\n                                    <td>\r\n                                    <div style={{ position: 'relative' }}>\r\n                                            <input type=\"text\" className=\"form-control\"\r\n                                                name=\"deptName\" value={dept.deptName}\r\n                                                onChange={(e) => changeInput(index, e)} />\r\n                                            <FaMinus className=\"text-danger me-2\" \r\n                                                style={{ position: 'absolute', right: '5px', top: '50%', transform: 'translateY(-50%)', cursor: 'pointer' }} \r\n                                                onClick={() => deleteDept(dept.deptNo, index)} />\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"row mt-3\">\r\n                        <div className=\"col d-flex justify-content-end\">\r\n                            <button onClick={saveDepts} className=\"btn btn-success me-2\">저장</button>\r\n                            <button onClick={addDept} className=\"btn btn-primary\"><FaPlus /></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\nexport default Dept;","import Jumbotron from \"../../Jumbotron\";\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport axios from '../../utils/CustomAxios';\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginIdState } from \"../../utils/RecoilData\";\r\nimport { FaMinus, FaPlus } from \"react-icons/fa\";\r\n\r\nconst Grade = () => {\r\n\r\n    const [grades, setGrades] = useState([]);\r\n    const [loginId, setLoginId] = useRecoilState(loginIdState);\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, []);\r\n\r\n    const loadData = useCallback(async () => {\r\n        const resp = await axios.get(\"/company/grade\");\r\n        setGrades(resp.data);\r\n    }, [grades]);\r\n\r\n    const addGrade = () => {\r\n        setGrades([...grades, { gradeNo: 0, companyNo:parseInt(loginId) ,gradeName: '' }]);\r\n    };\r\n\r\n    const saveGrades = async () => {\r\n        const resp = await axios.post(\"/company/grade\", grades);\r\n        loadData();\r\n    };\r\n\r\n    const changeInput = (index, e) => {\r\n        const newGrades = [...grades];\r\n        newGrades[index][e.target.name] = e.target.value;\r\n        setGrades(newGrades);\r\n    };\r\n\r\n    const deleteGrade = async (gradeNo, index) => {\r\n        const response = await axios.get(\"/company/grade/hasEmp/\"+gradeNo);\r\n            const choice = window.confirm(\"정말 삭제하시겠습니까?\")\r\n            if(!choice) return;\r\n            if (response.data.length > 0) {\r\n                alert('해당 직급의 사원이 존재합니다.');\r\n            } else {\r\n                await axios.delete(\"/company/grade/\"+gradeNo);\r\n                const updatedGrades = [...grades];\r\n                updatedGrades.splice(index, 1);\r\n                setGrades(updatedGrades);\r\n                alert('직급이 삭제되었습니다.');\r\n            }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <br /><br />\r\n            <div className='row mt-5'>\r\n                <div className='col'>\r\n                    <table className='table'>\r\n                        <thead className='text-center'>\r\n                            <tr className='align-items-center'>\r\n                                <th>직급목록</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className='text-center'>\r\n                            {grades.map((grade, index) => (\r\n                                <tr key={index} className='align-items-center'>\r\n                                    <td>\r\n                                    <div style={{ position: 'relative' }}>\r\n                                            <input type=\"text\" className=\"form-control\"\r\n                                                name=\"gradeName\" value={grade.gradeName}\r\n                                                onChange={(e) => changeInput(index, e)} />\r\n                                            <FaMinus className=\"text-danger me-2\" \r\n                                                style={{ position: 'absolute', right: '5px', top: '50%', transform: 'translateY(-50%)', cursor: 'pointer' }} \r\n                                                onClick={() => deleteGrade(grade.gradeNo, index)} />\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"row mt-3\">\r\n                        <div className=\"col d-flex justify-content-end\">\r\n                            <button onClick={saveGrades} className=\"btn btn-success me-2\">저장</button>\r\n                            <button onClick={addGrade} className=\"btn btn-primary\"><FaPlus /></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\nexport default Grade;","import Jumbotron from \"../../Jumbotron\";\r\nimport Dept from \"./Dept\";\r\nimport Grade from \"./Grade\";\r\n\r\nconst Management = () => {\r\n    return (\r\n        <>\r\n            <Jumbotron title=\"부서/직급 관리\" />\r\n            <div className=\"container w-100\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <Dept />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <Grade />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default Management;"],"names":["props","_jsx","_Fragment","children","className","_jsxs","style","backgroundColor","title","content","Dept","depts","setDepts","useState","loginId","setLoginId","useRecoilState","loginIdState","useEffect","loadData","useCallback","async","resp","axios","get","data","map","dept","index","position","type","name","value","deptName","onChange","e","changeInput","newDepts","target","FaMinus","right","top","transform","cursor","onClick","deptNo","response","window","confirm","length","alert","delete","updatedDepts","splice","deleteDept","post","addDept","companyNo","parseInt","FaPlus","Grade","grades","setGrades","grade","gradeName","newGrades","gradeNo","updatedGrades","deleteGrade","addGrade","Management","Jumbotron"],"sourceRoot":""}