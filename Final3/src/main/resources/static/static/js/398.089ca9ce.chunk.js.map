{"version":3,"file":"static/js/398.089ca9ce.chunk.js","mappings":"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","sources":["components/Jumbotron.js","components/intergrated/Company/AddEmp.js"],"sourcesContent":["//페이지의 제목 역할을 하는 컴포넌트\r\n\r\nfunction Jumbotron(props) {//props는 상위 컴포넌트에서 전달되는 값(=파라미터)\r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div style={{backgroundColor: \"#FFC0CB\"}} className=\"p-4 text-light rounded\">\r\n                        <h1>{props.title}</h1>\r\n                        <p>{props.content}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Jumbotron;","import { useEffect, useState, useCallback, useRef } from \"react\";\r\nimport axios from '../../utils/CustomAxios';\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { IoIosSave } from \"react-icons/io\";\r\nimport { GiCancel } from \"react-icons/gi\";\r\nimport { Modal } from 'bootstrap';\r\nimport * as XLSX from 'xlsx';\r\nimport Jumbotron from \"../../Jumbotron\";\r\nimport { saveAs } from 'file-saver';\r\n\r\nconst AddEmp = () => {\r\n    const [emps, setEmps] = useState([]);\r\n    const [depts, setDepts] = useState([]);\r\n    const [grades, setGrades] = useState([]);\r\n    const [input, setInput] = useState({});\r\n    const [allChecked, setAllChecked] = useState(false);\r\n    const [checkedState, setCheckedState] = useState({});\r\n    \r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, []);\r\n\r\n    const changeInput = useCallback((e) => {\r\n        setInput({\r\n            ...input,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }, [input]);\r\n\r\n    const clearInput = useCallback(() => {\r\n        setInput({\r\n            empName: \"\",\r\n            deptName: \"\",\r\n            gradeName: \"\",\r\n            empContact: \"\",\r\n            empEmail: \"\",\r\n            empType: \"\"\r\n        });\r\n    }, [input]);\r\n\r\n    const saveInput = useCallback(async () => {\r\n        setEmps(prevEmps => [...prevEmps, input]);\r\n        //정보 다시 로딩\r\n        loadData();\r\n\r\n        // 입력 폼 초기화\r\n        clearInput();\r\n\r\n        // 모달 닫기\r\n        closeAddModal();\r\n    }, [input]);\r\n\r\n    const cancelInput = useCallback(() => {\r\n        const choice = window.confirm(\"작성을 취소하시겠습니까?\");\r\n        if (choice === false) return;\r\n\r\n        clearInput();\r\n\r\n        closeAddModal();\r\n    }, [input]);\r\n    const loadData = useCallback(async () => {\r\n        const gradeList = await axios.get(\"/company/gradeList\");\r\n        setGrades(gradeList.data);\r\n        const deptList = await axios.get(\"/company/deptList\");\r\n        setDepts(deptList.data);\r\n    }, []);\r\n\r\n    const upload = useCallback((files) => {\r\n        const file = files[0];\r\n        if (!file) return; //파이리 없으면 리턴\r\n\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n            const data = new Uint8Array(e.target.result);\r\n            const workbook = XLSX.read(data, { type: 'array' });\r\n            const sheetName = workbook.SheetNames[0];\r\n            const jsonData = XLSX.utils.sheet_to_json(workbook.Sheets[sheetName], {\r\n                header: 0,\r\n                range: 1\r\n            });\r\n\r\n            const validKeys = ['empName', 'deptName', 'gradeName', 'empContact', 'empEmail', 'empType'];\r\n            const validData = jsonData.filter(emp =>\r\n                validKeys.every(key => emp.hasOwnProperty(key)) &&\r\n                depts.includes(emp.deptName) &&\r\n                grades.includes(emp.gradeName)\r\n            );\r\n\r\n            if (validData.length === jsonData.length) {\r\n                setEmps(prevEmps => [...prevEmps, ...validData])\r\n            } else {\r\n                alert('업로드한 파일의 데이터 형식이 올바르지 않습니다.');\r\n            }\r\n            console.log(validData);\r\n        };\r\n        reader.readAsArrayBuffer(file);\r\n    }, [depts, grades]);\r\n\r\n    const fileInputRef = useRef();\r\n\r\n    const handleUpload = () => {\r\n        fileInputRef.current.click();\r\n    }\r\n\r\n    const handleCheckAll = useCallback(() => {\r\n        const newState = !allChecked;\r\n        setAllChecked(newState);\r\n        setCheckedState(emps.reduce((state, emp, index) => ({\r\n            ...state,\r\n            [index]: newState\r\n        }), {}));\r\n    }, [allChecked, emps]);\r\n\r\n    const handleCheck = useCallback((index) => {\r\n        setCheckedState(prev => ({\r\n            ...prev,\r\n            [index]: !prev[index]\r\n        }));\r\n    }, []);\r\n\r\n    const uploadSelected = useCallback(async () => {\r\n        const selectedEmps = emps.filter((emp, index) => checkedState[index]);\r\n        if (selectedEmps.length === 0) {\r\n            alert(\"업로드할 사원을 선택하세요.\");\r\n            return;\r\n        }\r\n        const resp = await axios.post(\"/company/emp\", selectedEmps);\r\n        const newEmps = emps.filter((emp, index) => !checkedState[index]);\r\n        setEmps(newEmps);\r\n        // 모든 체크 상태 초기화\r\n        setCheckedState({});\r\n        setAllChecked(false);\r\n        alert(\"사원이 등록되었습니다.\");\r\n\r\n    }, [checkedState, emps]);\r\n\r\n    // const fileDownload = useCallback(async () => {\r\n    //     const response = await axios.get(\"/download/\" + 81, { responseType: 'blob' });\r\n    //     const contentDisposition = response.headers['Content-Disposition'];\r\n    //     console.log(contentDisposition);\r\n    //     let filename = \"default_filename.xlsx\"; // 기본 파일 이름 설정\r\n\r\n    //     if (contentDisposition) {\r\n    //         const filenameMatch = contentDisposition.match(/filename\\*=UTF-8''([^;]+)/);\r\n    //         if (filenameMatch) {\r\n    //             filename = decodeURIComponent(filenameMatch[1]);\r\n    //         } else {\r\n    //             const filenameRegex = /filename=\"?([^\"]+)\"?;/;\r\n    //             const match = contentDisposition.match(filenameRegex);\r\n    //             if (match) {\r\n    //                 filename = decodeURIComponent(match[1]); // 보편적으로 사용되는 경우를 대비하여 추가\r\n    //             }\r\n    //         }\r\n    //     }\r\n    //     saveAs(response.data, filename);\r\n    // }, []);\r\n\r\n    //정보 수정 모달\r\n    const addModal = useRef();\r\n    const openAddModal = useCallback(() => {\r\n        const modal = new Modal(addModal.current);\r\n        modal.show();\r\n    }, [addModal]);\r\n    const closeAddModal = useCallback(() => {\r\n        const modal = Modal.getInstance(addModal.current);\r\n        modal.hide();\r\n    }, [addModal]);\r\n\r\n    return (\r\n        <>\r\n            <Jumbotron title=\"사원 등록\" />\r\n            <div className=\"container-fluid\">\r\n                <div className='row mt-4'>\r\n                    <div className='col d-flex justify-content-end'>\r\n                        <button className='btn btn-success my-3 me-auto'\r\n                            onClick={uploadSelected}>\r\n                            <IoIosSave />\r\n                            선택한 사원 업로드\r\n                        </button>\r\n                        <a href={`${process.env.REACT_APP_BASE_URL}/download/${process.env.REACT_APP_EXCEL_TEMP_NO}`} className=\"btn btn-secondary my-3\">\r\n                            양식 다운로드\r\n                        </a>\r\n                        <button className='btn btn-primary my-3' onClick={handleUpload}>\r\n                            <FaPlus />\r\n                            사원 일괄 등록\r\n                        </button>\r\n                        <input type=\"file\" accept=\".xlsx, .csv, .xls\"\r\n                            style={{ display: 'none' }}\r\n                            ref={fileInputRef}\r\n                            onChange={e => upload(e.target.files)} />\r\n                        <button className='btn btn-primary my-3'\r\n                            onClick={e => openAddModal()}>\r\n                            <FaPlus />\r\n                            사원 직접 등록\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col\">\r\n                    <table className=\"table\">\r\n                        <thead className=\"text-center\">\r\n                            <tr>\r\n                                <th><input type=\"checkbox\" checked={allChecked} onChange={handleCheckAll}></input></th>\r\n                                <th>이름</th>\r\n                                <th>부서</th>\r\n                                <th>직급</th>\r\n                                <th>전화번호</th>\r\n                                <th>이메일</th>\r\n                                <th>권한여부</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"text-center\">\r\n                            {emps.map((emp, index) => (\r\n                                <tr key={emp.empName} className='align-items-center'>\r\n                                    <td><input type=\"checkbox\" checked={checkedState[index] || false} onChange={() => handleCheck(index)}></input></td>\r\n                                    <td>{emp.empName}</td>\r\n                                    <td>{emp.deptName}</td>\r\n                                    <td>{emp.gradeName}</td>\r\n                                    <td>{emp.empContact}</td>\r\n                                    <td>{emp.empEmail}</td>\r\n                                    <td>{emp.empType}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Modal */}\r\n            <div ref={addModal} className=\"modal fade\" id=\"staticBackdrop\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabIndex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h1 className=\"modal-title fs-5\" id=\"staticBackdropLabel\">사원 직접 등록</h1>\r\n                            <button type=\"button\" className=\"btn-close\" aria-label=\"Close\" onClick={e => cancelInput()}></button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            {/* 등록 화면 */}\r\n                            <div className='row mt-4'>\r\n                                <div className='col'>\r\n                                    <label>이름</label>\r\n                                    <input type=\"text\" name=\"empName\"\r\n                                        value={input.empName}\r\n                                        onChange={e => changeInput(e)}\r\n                                        className='form-control' />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='row mt-4'>\r\n                                <div className='col'>\r\n                                    <label>부서</label>\r\n                                    <select\r\n                                        name=\"deptName\"\r\n                                        value={input.deptName}\r\n                                        onChange={e => changeInput(e)}\r\n                                        className='form-control'>\r\n                                        <option value=\"\">부서 선택</option>\r\n                                        {depts.map(dept => (\r\n                                            <option value={dept}>\r\n                                                {dept}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='row mt-4'>\r\n                                <div className='col'>\r\n                                    <label>직급</label>\r\n                                    <select\r\n                                        name=\"gradeName\"\r\n                                        value={input.gradeName}\r\n                                        onChange={e => changeInput(e)}\r\n                                        className='form-control'>\r\n                                        <option value=\"\">직급 선택</option>\r\n                                        {grades.map(grade => (\r\n                                            <option value={grade}>\r\n                                                {grade}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='row mt-4'>\r\n                                <div className='col'>\r\n                                    <label>전화번호</label>\r\n                                    <input type=\"text\" name=\"empContact\"\r\n                                        value={input.empContact}\r\n                                        onChange={e => changeInput(e)}\r\n                                        className='form-control' />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='row mt-4'>\r\n                                <div className='col'>\r\n                                    <label>이메일</label>\r\n                                    <input type=\"text\" name=\"empEmail\"\r\n                                        value={input.empEmail}\r\n                                        onChange={e => changeInput(e)}\r\n                                        className='form-control' />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='row mt-4'>\r\n                                <div className='col'>\r\n                                    <label>권한여부</label>\r\n                                    <select\r\n                                        name=\"empType\"\r\n                                        value={input.empType}\r\n                                        onChange={e => changeInput(e)}\r\n                                        className='form-control'>\r\n                                        <option value=\"\">권한 선택</option>\r\n                                        <option value='사원'>사원</option>\r\n                                        <option value='임원'>임원</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button className='btn btn-danger'\r\n                                onClick={e => cancelInput()}>\r\n                                <GiCancel />\r\n                                &nbsp;\r\n                                취소\r\n                            </button>\r\n                            <button className='btn btn-success me-2'\r\n                                onClick={e => saveInput()}>\r\n                                <IoIosSave />\r\n                                &nbsp;\r\n                                저장\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddEmp;"],"names":["props","_jsx","_Fragment","children","className","_jsxs","style","backgroundColor","title","content","AddEmp","emps","setEmps","useState","depts","setDepts","grades","setGrades","input","setInput","allChecked","setAllChecked","checkedState","setCheckedState","useEffect","loadData","changeInput","useCallback","e","target","name","value","clearInput","empName","deptName","gradeName","empContact","empEmail","empType","saveInput","async","prevEmps","closeAddModal","cancelInput","window","confirm","gradeList","axios","get","data","deptList","upload","files","file","reader","FileReader","onload","Uint8Array","result","workbook","XLSX","type","sheetName","SheetNames","jsonData","sheet_to_json","Sheets","header","range","validKeys","validData","filter","emp","every","key","hasOwnProperty","includes","length","alert","console","log","readAsArrayBuffer","fileInputRef","useRef","handleCheckAll","newState","reduce","state","index","handleCheck","prev","uploadSelected","selectedEmps","post","newEmps","addModal","openAddModal","Modal","current","show","getInstance","hide","Jumbotron","onClick","IoIosSave","href","concat","process","handleUpload","click","FaPlus","accept","display","ref","onChange","checked","map","id","tabIndex","dept","grade","GiCancel"],"sourceRoot":""}