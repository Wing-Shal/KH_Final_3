{"version":3,"file":"static/js/673.9ca41e35.chunk.js","mappings":"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","sources":["components/intergrated/Emp/CompInfo.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from \"../../utils/CustomAxios\";\r\nimport { loginIdState } from '../../utils/RecoilData';\r\nimport { useRecoilState } from 'recoil';\r\nimport defaultImage from \"../../../assets/CompanyLogo.jpg\"; // 기본 이미지 경로를 추가해주세요\r\nimport '../Company/Mypage.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction CompInfo() {\r\n  const [image, setImage] = useState(defaultImage); // 기본 이미지로 초기화\r\n  const [loginId] = useRecoilState(loginIdState);\r\n  const [companyInfo, setCompanyInfo] = useState();\r\n  const [notices, setNotices] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [size, setSize] = useState(6);\r\n\r\n  const baseURL = process.env.REACT_APP_BASE_URL;\r\n\r\n  const loadCompanyData = useCallback(async () => {\r\n    try {\r\n      const resp = await axios.get('/company/info');\r\n      setCompanyInfo(resp.data);\r\n    } catch (error) {\r\n      console.error('회사 정보 불러오기 오류:', error);\r\n    }\r\n  }, [companyInfo]);\r\n\r\n  const loadAttachNo = useCallback(async () => {\r\n    try {\r\n      const resp = await axios.get('/emp/company/image');\r\n      const attachNo = resp.data;\r\n      setImage(`${baseURL}/download/${attachNo}`);\r\n    } catch (error) {\r\n      setImage(defaultImage);\r\n    }\r\n  }, []);\r\n  const loadNoticeData = useCallback(async () => {\r\n    try {\r\n      const resp = await axios.get(`/boardNotice/page/${page}/size/${size}`);\r\n      setNotices(resp.data.list);\r\n    }\r\n    catch (error) {\r\n      if (error.response && error.response.status === 404) {\r\n        console.log(\"데이터 없음.\");\r\n        setNotices([]);\r\n      }\r\n    }\r\n  }, [page, size]);\r\n\r\n  useEffect(() => {\r\n    loadCompanyData();\r\n    loadAttachNo();\r\n    loadNoticeData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h1>회사 정보</h1>\r\n      <div className=\"container-sm border border-5 rounded p-3 mb-3\">\r\n        <div className=\"row align-items-center\">\r\n          <div className=\"col-md-3\">\r\n            <div>\r\n              {loginId && (\r\n                <img\r\n                  src={image}\r\n                  alt=\"사진 미리보기\"\r\n                  style={{ width: '230px', height: '300px', marginBottom: '10px', objectFit: \"cover\" }}\r\n                  onError={(e) => { e.target.src = defaultImage; }} // 이미지 로드 실패 시 기본 이미지로 대체\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n          {companyInfo && (\r\n            <div className=\"col-md-5\">\r\n              <table className=\"table\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>회사명</td>\r\n                    <td>{companyInfo.companyName}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>사업자등록번호</td>\r\n                    <td>{companyInfo.companyBn}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>전화번호</td>\r\n                    <td>{companyInfo.companyContact}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>이메일</td>\r\n                    <td>{companyInfo.companyEmail}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>우편번호</td>\r\n                    <td>{companyInfo.companyZipcode}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>주소</td>\r\n                    <td>{companyInfo.companyAddress1}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>상세주소</td>\r\n                    <td>{companyInfo.companyAddress2}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n          <div className=\"col-md-4\">\r\n            <table className='table'>\r\n              <thead className=\"text-center\">\r\n                <tr className='content-center'>\r\n                  <th>제목</th>\r\n                  <th>작성시간</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"text-center\">\r\n                {notices.map(notice => (\r\n                  <tr key={notice.noticeNo}>\r\n                    <td>\r\n                      <Link className='notice-link' to={`/board/notice/${notice.noticeNo}`}>{notice.noticeTitle}</Link>\r\n                    </td>\r\n                    <td>{notice.noticeWtime}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CompInfo;\r\n"],"names":["image","setImage","useState","defaultImage","loginId","useRecoilState","loginIdState","companyInfo","setCompanyInfo","notices","setNotices","page","setPage","size","setSize","loadCompanyData","useCallback","async","resp","axios","get","data","error","console","loadAttachNo","attachNo","concat","process","loadNoticeData","list","response","status","log","useEffect","_jsxs","_Fragment","children","_jsx","className","src","alt","style","width","height","marginBottom","objectFit","onError","e","target","companyName","companyBn","companyContact","companyEmail","companyZipcode","companyAddress1","companyAddress2","map","notice","Link","to","noticeNo","noticeTitle","noticeWtime"],"sourceRoot":""}