{"version":3,"file":"static/js/917.97f439dd.chunk.js","mappings":"sMAOA,MA4FA,EA5FwBA,KACpB,MAAM,SAAEC,IAAaC,EAAAA,EAAAA,KACfC,GAAWC,EAAAA,EAAAA,OAEVC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,CAC/BC,YAAa,GACbC,cAAe,MAGnBC,EAAAA,EAAAA,YAAU,KACiBC,WACnB,MAAMC,QAAaC,EAAAA,EAAMC,IAAI,gBAADC,OAAiBd,IAC7CK,EAAS,CACLL,SAAUA,EACVO,YAAaI,EAAKI,KAAKR,YACvBC,cAAeG,EAAKI,KAAKP,eAC3B,EAENQ,EAAgB,GACjB,CAAChB,IAEJ,MAAMiB,GAAcC,EAAAA,EAAAA,cAAaC,IAC7B,MAAMC,EAAOD,EAAEE,OAAOD,KAChBE,EAAQH,EAAEE,OAAOC,MAEvBjB,GAAUkB,IAAS,IACZA,EACH,CAACH,GAAOE,KACT,GACJ,IAEGE,GAAaN,EAAAA,EAAAA,cAAY,KAC3Bb,EAAS,CACLE,YAAa,GACbC,cAAe,IACjB,GACH,IAEGiB,GAAcP,EAAAA,EAAAA,cAAY,KACbQ,OAAOC,QAAQ,2EAE1BH,IACAtB,EAAS,mBAADY,OAAoBd,IAChC,GACD,CAACE,EAAUF,EAAUwB,IAElBI,GAAaV,EAAAA,EAAAA,cAAYR,UAE3B,GADegB,OAAOC,QAAQ,wEAClB,CACR,MAAMhB,QAAaC,EAAAA,EAAMiB,MAAM,gBAAiBzB,GAChDF,EAAS,mBAADY,OAAoBd,IAC5B8B,QAAQC,IAAIpB,EAAKI,KACrB,IACD,CAACX,EAAOF,EAAUF,IAErB,OAAII,EAAMG,YAAYyB,OAAS,IAC3BN,OAAOO,MAAM,kGACN,MAGP7B,EAAMI,cAAcwB,OAAS,MAC7BN,OAAOO,MAAM,kGACN,OAIPC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,2CACJC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUF,UACrBF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,MAAKF,SAAA,EAChBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,kBACPC,EAAAA,EAAAA,KAAA,SAAOE,KAAK,OAAOnB,KAAK,cAAcE,MAAOlB,EAAMG,YAAaiC,SAAUvB,EAAaqB,UAAU,uBAIzGD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUF,UACrBF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,MAAKF,SAAA,EAChBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,kBACPC,EAAAA,EAAAA,KAAA,YAAUjB,KAAK,gBAAgBE,MAAOlB,EAAMI,cAAegC,SAAUvB,EAAaqB,UAAU,uCAIpGD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUF,UACrBF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,eAAcF,SAAA,EACzBF,EAAAA,EAAAA,MAAA,UAAQI,UAAU,uBAAuBG,QAASb,EAAWQ,SAAA,EAACC,EAAAA,EAAAA,KAACK,EAAAA,IAAa,IAAG,oBAC/ER,EAAAA,EAAAA,MAAA,UAAQI,UAAU,iBAAiBG,QAAShB,EAAYW,SAAA,EAACC,EAAAA,EAAAA,KAACM,EAAAA,IAAQ,IAAG,0BAG9E,C","sources":["components/intergrated/Company/BoardNoticeEdit.js"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from \"../../utils/CustomAxios\";\r\nimport { MdCancel } from \"react-icons/md\";\r\nimport { IoSaveOutline } from \"react-icons/io5\";\r\nimport './BoardNoticeEditAdd.css';\r\n\r\nconst BoardNoticeEdit = () => {\r\n    const { noticeNo } = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    const [input, setInput] = useState({\r\n        noticeTitle: \"\",\r\n        noticeContent: \"\",\r\n    });\r\n\r\n    useEffect(() => {\r\n        const loadNoticeData = async () => {\r\n            const resp = await axios.get(`/boardNotice/${noticeNo}`);\r\n            setInput({\r\n                noticeNo: noticeNo,\r\n                noticeTitle: resp.data.noticeTitle,\r\n                noticeContent: resp.data.noticeContent,\r\n            });\r\n        };\r\n        loadNoticeData();\r\n    }, [noticeNo]);\r\n\r\n    const changeInput = useCallback((e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setInput((prevInput) => ({\r\n            ...prevInput,\r\n            [name]: value,\r\n        }));\r\n    }, []);\r\n\r\n    const clearInput = useCallback(() => {\r\n        setInput({\r\n            noticeTitle: \"\",\r\n            noticeContent: \"\",\r\n        });\r\n    }, []);\r\n\r\n    const cancelInput = useCallback(() => {\r\n        const choice = window.confirm(\"작성된 내용이 삭제됩니다.\");\r\n        if (choice) {\r\n            clearInput();\r\n            navigate(`/company/notice/${noticeNo}`);\r\n        }\r\n    }, [navigate, noticeNo, clearInput]);\r\n\r\n    const editNotice = useCallback(async () => {\r\n        const choice = window.confirm(\"공지를 수정하시겠습니까?\");\r\n        if (choice) {\r\n            const resp = await axios.patch(\"/boardNotice/\", input);\r\n            navigate(`/company/notice/${noticeNo}`);\r\n            console.log(resp.data);\r\n        }\r\n    }, [input, navigate, noticeNo]);\r\n\r\n    if (input.noticeTitle.length > 30) {\r\n        window.alert(\"제목의 제한 글자수를 초과했습니다.\");\r\n        return null;\r\n    }\r\n\r\n    if (input.noticeContent.length > 1333) {\r\n        window.alert(\"내용의 제한 글자수를 초과했습니다.\");\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>★공지 수정★</h1>\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col\">\r\n                    <label>제목</label>\r\n                    <input type=\"text\" name=\"noticeTitle\" value={input.noticeTitle} onChange={changeInput} className=\"form-control\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col\">\r\n                    <label>내용</label>\r\n                    <textarea name=\"noticeContent\" value={input.noticeContent} onChange={changeInput} className=\"form-control custom-textarea\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col text-end\">\r\n                    <button className=\"btn btn-success me-2\" onClick={editNotice}><IoSaveOutline /> 등록</button>\r\n                    <button className=\"btn btn-danger\" onClick={cancelInput}><MdCancel /> 취소</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BoardNoticeEdit;\r\n"],"names":["BoardNoticeEdit","noticeNo","useParams","navigate","useNavigate","input","setInput","useState","noticeTitle","noticeContent","useEffect","async","resp","axios","get","concat","data","loadNoticeData","changeInput","useCallback","e","name","target","value","prevInput","clearInput","cancelInput","window","confirm","editNotice","patch","console","log","length","alert","_jsxs","_Fragment","children","_jsx","className","type","onChange","onClick","IoSaveOutline","MdCancel"],"sourceRoot":""}