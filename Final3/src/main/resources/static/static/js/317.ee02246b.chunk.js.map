{"version":3,"file":"static/js/317.ee02246b.chunk.js","mappings":"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","sources":["components/Jumbotron.js","components/intergrated/Admin/AdminLogin.js"],"sourcesContent":["//페이지의 제목 역할을 하는 컴포넌트\r\n\r\nfunction Jumbotron(props) {//props는 상위 컴포넌트에서 전달되는 값(=파라미터)\r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div style={{backgroundColor: \"#FFC0CB\"}} className=\"p-4 text-light rounded\">\r\n                        <h1>{props.title}</h1>\r\n                        <p>{props.content}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Jumbotron;","//실제 로그인을 처리하기 위한 정보 입력 페이지\r\n\r\nimport { useCallback, useState } from \"react\";\r\nimport Jumbotron from \"../../Jumbotron\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { isCheckedState, isPaidState, loginIdState, loginLevelState } from \"../../utils/RecoilData\";\r\nimport axios from \"../../utils/CustomAxios\";\r\nimport { useNavigate } from \"react-router\";\r\nimport '../Login.css';\r\nimport Logo from '../../../assets/BlackLogo.png';\r\n\r\nconst AdminLogin = () => {\r\n\r\n    //state\r\n    const [input, setInput] = useState({\r\n        id: \"\", pw: \"\"\r\n    });\r\n\r\n    //recoil\r\n    const [loginId, setLoginId] = useRecoilState(loginIdState);\r\n    const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n    const [isPaid, setIsPaid] = useRecoilState(isPaidState);\r\n    const [isChecked, setIsChecked] = useRecoilState(isCheckedState);\r\n\r\n    //callback\r\n    const changeInput = useCallback(e => {\r\n        setInput({\r\n            ...input,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }, [input]);\r\n\r\n    //navigator\r\n    const navigator = useNavigate();\r\n\r\n    const adminLogin = useCallback(async () => {\r\n        if (input.id.length === 0) return;\r\n        if (input.pw.length === 0) return;\r\n\r\n        try {\r\n            const resp = await axios.post(\"/admin/login\", input);\r\n            setLoginId(parseInt(resp.data.loginId));\r\n            setLoginLevel(resp.data.loginLevel);\r\n            setIsPaid(resp.data.isPaid);\r\n            setIsChecked(resp.data.isChecked);\r\n\r\n            axios.defaults.headers.common['Authorization'] = resp.data.accessToken;\r\n\r\n            window.localStorage.setItem(\"refreshToken\", resp.data.refreshToken);\r\n        } catch (error) {\r\n            if (error.response && ( error.response.status === 401 || error.response.status === 404)) {\r\n                window.alert(\"아이디 혹은 비밀번호가 일치하지 않습니다\");\r\n            } else {\r\n                window.alert(\"로그인 중 오류가 발생했습니다:\", error.message);\r\n            }\r\n        }\r\n\r\n\r\n\r\n        navigator(\"/admin/home\");\r\n    }, [input]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container login-container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 offset-3\">\r\n                        <div className=\"login-wrapper w-100\">\r\n                            <div className=\"img-wrapper text-center mb-4\">\r\n                                <img className=\"logo-image\" src={Logo} alt=\"Logo\" />\r\n                            </div>\r\n                            <div className=\"row mt-4\">\r\n                                <div className=\"col\">\r\n                                    <label>운영자 아이디</label>\r\n                                    <input type=\"text\" name=\"id\" className=\"form-control\"\r\n                                        value={input.id} onChange={e => changeInput(e)} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mt-4\">\r\n                                <div className=\"col\">\r\n                                    <label>비밀번호</label>\r\n                                    <input type=\"password\" name=\"pw\" className=\"form-control\"\r\n                                        value={input.pw} onChange={e => changeInput(e)} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mt-4\">\r\n                                <div className=\"col\">\r\n                                    <button className=\"btn btn-dark w-100\"\r\n                                        onClick={e => adminLogin()}>로그인</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AdminLogin;"],"names":["props","_jsx","_Fragment","children","className","_jsxs","style","backgroundColor","title","content","AdminLogin","input","setInput","useState","id","pw","loginId","setLoginId","useRecoilState","loginIdState","loginLevel","setLoginLevel","loginLevelState","isPaid","setIsPaid","isPaidState","isChecked","setIsChecked","isCheckedState","changeInput","useCallback","e","target","name","value","navigator","useNavigate","adminLogin","async","length","resp","axios","post","parseInt","data","defaults","headers","common","accessToken","window","localStorage","setItem","refreshToken","error","response","status","alert","message","src","Logo","alt","type","onChange","onClick"],"sourceRoot":""}